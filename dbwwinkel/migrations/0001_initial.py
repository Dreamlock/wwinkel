# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-20 21:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('custom_users', '0002_auto_20170420_2348'),
    ]

    operations = [
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_word', models.CharField(max_length=33, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('reason', models.TextField()),
                ('purpose', models.TextField()),
                ('own_contribution', models.TextField()),
                ('remarks', models.TextField(blank=True)),
                ('internal_remarks', models.TextField(blank=True)),
                ('how_know_WW', models.TextField(blank=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('public', models.BooleanField()),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                ('keyword', models.ManyToManyField(to='dbwwinkel.Keyword')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_users.Organisation')),
            ],
            options={
                'default_permissions': (('can_add_question', 'Can add question'), ('can_view_draft_question', 'Can view draft question'), ('can_edit_draft_question', 'Can edit draft question'), ('can_view_in_progress_question_central', 'Can view in progress question central'), ('can_edit_in_progress_question_central', 'Can edit in progress question central'), ('can_view_processed_question_central', 'Can view processed question central'), ('can_edit_processed_question_central', 'Can edit processed question central'), ('can_view_in_progress_question_regional', 'Can view in progress question regional'), ('can_edit_in_progress_question_regional', 'Can edit in progress question regional'), ('can_view_public_question', 'Can view public question'), ('can_edit_public_question', 'Can edit public question'), ('can_view_reserved_question', 'Can view reserved question'), ('can_edit_reserved_question', 'Can edit reserved question'), ('can_view_ongoing_question', 'Can view ongoing question'), ('can_edit_ongoing_question', 'Can edit ongoing question'), ('can_view_finished_question', 'Can view finished question'), ('can_edit_finished_question', 'Can edit finished question'), ('can_view_denied_question', 'Can view denied question'), ('can_edit_denied_question', 'Can edit denied question'), ('can_view_revoked_question', 'Can view revoked question'), ('can_edit_revoked_question', 'Can edit revoked question'), ('can_delete_question', 'Can delete question')),
            },
        ),
        migrations.CreateModel(
            name='QuestionSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=33, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.PositiveIntegerField(choices=[(0, 'draft'), (1, 'in progress central'), (2, 'processed central'), (3, 'in progress regional'), (4, 'public'), (5, 'reserved'), (6, 'ongoing'), (7, 'finished'), (8, 'denied'), (9, 'revoked')], unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudyField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_field', models.CharField(max_length=33, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='question_subject',
            field=models.ManyToManyField(to='dbwwinkel.QuestionSubject'),
        ),
        migrations.AddField(
            model_name='question',
            name='region',
            field=models.ManyToManyField(to='custom_users.Region'),
        ),
        migrations.AddField(
            model_name='question',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbwwinkel.State'),
        ),
        migrations.AddField(
            model_name='question',
            name='study_field',
            field=models.ManyToManyField(to='dbwwinkel.StudyField'),
        ),
    ]
